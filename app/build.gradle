import java.security.MessageDigest
import java.text.SimpleDateFormat

// 应用Android应用插件
apply plugin: 'com.android.application'

// Android配置信息
android {
    def buildDate
    def buildTime
    def buildTime2
    def buildNumber
    // alpha|beta|release|debug
    def buildTag = "alpha" // 指定构建标签

    try {
        // 获取当前日期并格式化
        def dateFormat = new SimpleDateFormat("yyyy-MM-dd")
        buildDate = dateFormat.format(new Date())
        // 获取当前时间并格式化为编译时间字符串
        def dateFormat2 = new SimpleDateFormat("HH:mm:ss")
        buildTime = dateFormat2.format(new Date())
        // 获取当前时间并格式化为编译时间字符串
        def dateFormat3 = new SimpleDateFormat("HH.mm.ss")
        buildTime2 = dateFormat3.format(new Date())
        // 使用 Java MessageDigest 计算 buildTime 的 MD5 值，并取前8位作为版本号
        MessageDigest md = MessageDigest.getInstance("MD5")
        md.update(buildTime.bytes)
        buildNumber = md.digest().encodeHex().toString().substring(0, 8)
    } catch (Exception e) {
        // 错误处理机制
        println("时间或日期格式化错误: ${e.message}")
        buildDate = "unknown"
        buildTime = "unknown"
        buildNumber = "00000000"
    }

    def version = "${buildNumber}-${buildTag}"
    namespace "fansirsqi.xposed.sesame" // 命名空间
    compileSdk 34    // 编译SDK版本
    defaultConfig {
        applicationId "fansirsqi.xposed.sesame" // 应用程序ID
        minSdk 21 // 最低SDK版本
        //noinspection ExpiredTargetSdkVersion
        targetSdk 31 // 目标SDK版本
        versionCode 80 // 版本代码
        versionName version // 版本名称
        // 使用 buildConfigField 添加自定义字段
        buildConfigField "String", "BUILD_DATE", "\"${buildDate}\"" // 创建常量
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\"" // 创建常量
        buildConfigField "String", "BUILD_TIME2", "\"${buildTime2}\"" // 创建常量
        buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\"" // 创建常量
        buildConfigField "String", "BUILD_TAG", "\"${buildTag}\"" // 创建常量
    }


    ext {
        applicationName = "Sesame" // 应用程序名称
        applicationType = "Normal" // 应用程序类型
    }
    flavorDimensions.add("default") // 添加产品风味维度
    productFlavors {
        normal {
            dimension "default" // 普通产品风味
            ext.applicationType = "Normal"
        }
        compatible {
            dimension "default" // 兼容产品风味
            ext.applicationType = "Compatible"
        }
    }
    buildTypes {
        release {
            minifyEnabled false // 禁用代码压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            // ProGuard配置文件
        }
    }

    // 构建工具版本
    applicationVariants.configureEach { variant -> // 配置每个应用变体
        variant.outputs.configureEach { output -> // 配置每个输出
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name == 'release') {
                    output.outputFileName = "${applicationName}-${variant.productFlavors[0].ext.applicationType}-${defaultConfig.versionName}.apk"
                    // 设置输出的APK文件名
                }
                if (variant.buildType.name == 'debug') {
                    output.outputFileName = "${applicationName}-${variant.productFlavors[0].ext.applicationType}-${defaultConfig.versionName}-debug.apk"
                    // 设置输出的调试APK文件名
                }
            }
        }
    }
}

// 依赖项配置
dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0' // 支持库
    compileOnly 'de.robv.android.xposed:api:82' // Xposed API
    //noinspection AnnotationProcessorOnCompilePath
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.32' // Lombok 库
    annotationProcessor 'org.projectlombok:lombok:1.18.32' // Lombok 注解处理器
    implementation 'com.elvishew:xlog:1.11.0' // 日志库
    implementation 'com.squareup.okhttp3:okhttp:4.12.0' // OkHttp库
    normalImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'// 普通产品风味的Jackson核心库
    normalImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'// 普通产品风味的Jackson数据绑定库
    normalImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.1'// 普通产品风味的Jackson注解库
    compatibleImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'// 兼容产品风味的Jackson核心库
    compatibleImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.5'// 兼容产品风味的Jackson数据绑定库
    compatibleImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.5'// 兼容产品风味的Jackson注解库
}
